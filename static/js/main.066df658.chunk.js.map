{"version":3,"sources":["components/AssignmentForm.jsx","firebase/firebase.js","firebase/assigments.js","components/AssignmentList.jsx","components/FilterSortBar.jsx","components/MemberForm.jsx","App.js","index.js"],"names":["AssignmentForm","_ref","onAddAssignment","title","setTitle","useState","category","setCategory","inputStyle","padding","width","marginBottom","border","borderRadius","React","createElement","onSubmit","e","preventDefault","trim","style","maxWidth","fontSize","fontWeight","type","value","onChange","target","placeholder","backgroundColor","color","cursor","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","assignToMember","async","id","memberName","ref","doc","updateDoc","member","status","AssignmentList","assignments","filters","sortBy","members","user","filtered","filter","a","sort","b","_a$timestamp","_b$timestamp","_b$timestamp2","_a$timestamp2","timestamp","seconds","localeCompare","markAsDone","assignment","find","assignmentId","name","markAsDoneFirebase","error","alert","console","listItemStyle","display","justifyContent","alignItems","buttonStyle","marginLeft","selectStyle","marginTop","length","listStyle","map","_a$timestamp3","key","toDate","toLocaleString","flexDirection","gap","minWidth","Fragment","_objectSpread","defaultValue","m","role","onClick","deleteDoc","deleteAssignment","FilterSortBar","setFilters","setSortBy","flexWrap","margin","f","MemberForm","onAddMember","setName","setRole","useEffect","boxSizing","App","setAssignments","setMembers","email","setEmail","password","setPassword","setUser","isRegistering","setIsRegistering","unsubscribe","onSnapshot","collection","snapshot","data","docs","getDocs","fetchMembers","cardStyle","boxShadow","minHeight","fontFamily","textAlign","uid","createUserWithEmailAndPassword","setDoc","newMember","prev","message","signInWithEmailAndPassword","userDoc","getDoc","exists","concat","required","textDecoration","signOut","flex","addDoc","serverTimestamp","toLowerCase","replace","Date","now","toString","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.066df658.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst AssignmentForm = ({ onAddAssignment }) => {\n  const [title, setTitle] = useState(\"\");\n  const [category, setCategory] = useState(\"ux\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title.trim() === \"\") return;\n    onAddAssignment(title, category);\n    setTitle(\"\");\n  };\n\n  const formStyle = {\n    padding: \"1rem\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    marginBottom: \"1rem\",\n    maxWidth: \"500px\",\n  };\n\n  const inputStyle = {\n    padding: \"0.5rem\",\n    width: \"100%\",\n    marginBottom: \"0.75rem\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n  };\n\n  const buttonStyle = {\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"#3b82f6\", // blå\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n  };\n\n  const headingStyle = {\n    fontSize: \"1.25rem\",\n    fontWeight: \"600\",\n    marginBottom: \"0.75rem\",\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={formStyle}>\n      <h2 style={headingStyle}>Lägg till uppgift</h2>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Uppgiftstitel\"\n        style={inputStyle}\n      />\n      <select\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        style={inputStyle}\n      >\n        <option value=\"ux\">UX</option>\n        <option value=\"frontend\">Frontend</option>\n        <option value=\"backend\">Backend</option>\n      </select>\n      <button type=\"submit\" style={buttonStyle}>\n        Lägg till\n      </button>\n    </form>\n  );\n};\n\nexport default AssignmentForm;","\n\n\n// firebase/firebase.js (example)\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGNd0ZOBKETzJAttnxrRa1OeDV4Zqb0jo\",\n  authDomain: \"scrumboard-f2e02.firebaseapp.com\",\n  projectId: \"scrumboard-f2e02\",\n  storageBucket: \"scrumboard-f2e02.firebasestorage.app\",\n  messagingSenderId: \"48014949573\",\n  appId: \"1:48014949573:web:d85977114783f4138184ac\",\n  measurementId: \"G-1EYFVNR3N6\",\n};\n  \n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { auth, db };\n\n","import {\n  addDoc,\n  collection,\n  doc,\n  updateDoc,\n  deleteDoc,\n  serverTimestamp,\n  onSnapshot,\n  query,\n  orderBy\n} from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\n// Add new assignment\nexport const addAssignment = async (title, category) => {\n  await addDoc(collection(db, \"assignments\"), {\n    title,\n    category,\n    status: \"new\",\n    member: \"\",\n    timestamp: serverTimestamp(),\n  });\n};\n\n// Assign to member\nexport const assignToMember = async (id, memberName) => {\n  const ref = doc(db, \"assignments\", id);\n  await updateDoc(ref, {\n    member: memberName,\n    status: \"in progress\",\n  });\n};\n\n// Mark as done\nexport const markAsDone = async (id) => {\n  const ref = doc(db, \"assignments\", id);\n  await updateDoc(ref, {\n    status: \"finished\",\n  });\n};\n\n// Delete assignment\nexport const deleteAssignment = async (id) => {\n  const ref = doc(db, \"assignments\", id);\n  await deleteDoc(ref);\n};\n\n// Get real-time assignments\nexport const getAssignments = (callback) => {\n  const q = query(collection(db, \"assignments\"), orderBy(\"timestamp\", \"desc\"));\n  return onSnapshot(q, (snapshot) => {\n    const data = snapshot.docs.map((doc) => ({ \n      id: doc.id, \n      ...doc.data(),\n      timestamp: doc.data().timestamp // Keep the Firestore timestamp\n    }));\n    callback(data);\n  });\n};","import React from \"react\";\nimport {\n  assignToMember,\n  markAsDone as markAsDoneFirebase,\n  deleteAssignment,\n} from \"../firebase/assigments\";\n\nconst AssignmentList = ({ assignments, filters, sortBy, members, user }) => {\n  const filtered = assignments\n    .filter((a) => {\n      if (filters.category && a.category !== filters.category) return false;\n      if (filters.member && a.member !== filters.member) return false;\n      return true;\n    })\n    .sort((a, b) => {\n      if (sortBy === \"timestamp-asc\")\n        return (a.timestamp?.seconds || 0) - (b.timestamp?.seconds || 0);\n      if (sortBy === \"timestamp-desc\")\n        return (b.timestamp?.seconds || 0) - (a.timestamp?.seconds || 0);\n      if (sortBy === \"title-asc\") return a.title.localeCompare(b.title);\n      if (sortBy === \"title-desc\") return b.title.localeCompare(a.title);\n      return 0;\n    });\n\n  const markAsDone = async (assignmentId) => {\n    const assignment = assignments.find((a) => a.id === assignmentId);\n    if (!assignment) return;\n\n    if (assignment.member !== user.name) {\n      alert(\"Du kan bara markera dina egna uppgifter som klara.\");\n      return;\n    }\n\n    try {\n      await markAsDoneFirebase(assignmentId);\n    } catch (error) {\n      alert(\"Något gick fel vid markering som klar.\");\n      console.error(error);\n    }\n  };\n\n  const listItemStyle = {\n    padding: \"1rem\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"0.5rem\",\n  };\n\n  const buttonStyle = {\n    padding: \"0.5rem 0.75rem\",\n    borderRadius: \"4px\",\n    color: \"white\",\n    border: \"none\",\n    cursor: \"pointer\",\n    marginLeft: \"0.5rem\",\n  };\n\n  const selectStyle = {\n    padding: \"0.25rem 0.5rem\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n  };\n\n  return (\n    <div style={{ marginTop: \"1rem\" }}>\n      {filtered.length === 0 ? (\n        <p style={{ color: \"#666\" }}>Inga uppgifter</p>\n      ) : (\n        <ul style={{ listStyle: \"none\", padding: 0 }}>\n          {filtered.map((a) => (\n            <li key={a.id} style={listItemStyle}>\n              <div>\n                <p style={{ fontWeight: \"bold\" }}>{a.title}</p>\n                <p style={{ fontSize: \"0.9rem\", color: \"#666\" }}>\n                  {a.timestamp?.toDate().toLocaleString()} – {a.category}\n                </p>\n                {a.member && <p style={{ fontSize: \"0.9rem\" }}>Tilldelad: {a.member}</p>}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"flex-end\",\n                  gap: \"0.5rem\",\n                  minWidth: \"150px\",\n                }}\n              >\n                {a.status === \"new\" && (\n                  <>\n                    <select\n                      onChange={(e) => assignToMember(a.id, e.target.value)}\n                      style={{ ...selectStyle, width: \"140px\" }}\n                      defaultValue=\"\"\n                    >\n                      <option value=\"\">Tilldela...</option>\n                      {members\n                        .filter((m) => m.role === a.category) \n                        .map((m) => (\n                          <option key={m.id} value={m.name}>\n                            {m.name} ({m.role})\n                          </option>\n                        ))}\n                    </select>\n\n                    {user &&\n                      (!a.member || a.member === \"\") &&\n                      user.role === a.category && (\n                        <button\n                          onClick={() => assignToMember(a.id, user.name)}\n                          style={{\n                            ...buttonStyle,\n                            backgroundColor: \"#3b82f6\",\n                            marginLeft: \"0\",\n                            width: \"140px\",\n                          }}\n                        >\n                          Ta emot\n                        </button>\n                      )}\n                  </>\n                )}\n\n                {a.status === \"in progress\" && a.member === user.name && (\n                  <button\n                    onClick={() => markAsDone(a.id)}\n                    style={{\n                      ...buttonStyle,\n                      backgroundColor: \"#10b981\",\n                      marginLeft: \"0\",\n                      width: \"140px\",\n                    }}\n                  >\n                    Klart\n                  </button>\n                )}\n\n                {a.status === \"finished\" && (\n                  <button\n                    onClick={() => deleteAssignment(a.id)}\n                    style={{\n                      ...buttonStyle,\n                      backgroundColor: \"#ef4444\",\n                      marginLeft: \"0\",\n                      width: \"140px\",\n                    }}\n                  >\n                    Radera\n                  </button>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default AssignmentList;\n","import React from \"react\";\n\nconst FilterSortBar = ({ filters, setFilters, sortBy, setSortBy, members }) => {\n  const containerStyle = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    gap: \"1rem\",\n    margin: \"1rem 0\",\n  };\n\n  const selectStyle = {\n    padding: \"0.5rem\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n  };\n\n  return (\n    <div style={containerStyle}>\n      <select\n        value={filters.category}\n        onChange={(e) => setFilters((f) => ({ ...f, category: e.target.value }))}\n        style={selectStyle}\n      >\n        <option value=\"\">Alla kategorier</option>\n        <option value=\"ux\">UX</option>\n        <option value=\"frontend\">Frontend</option>\n        <option value=\"backend\">Backend</option>\n      </select>\n\n      <select\n        value={filters.member}\n        onChange={(e) => setFilters((f) => ({ ...f, member: e.target.value }))}\n        style={selectStyle}\n      >\n        <option value=\"\">Alla medlemmar</option>\n        {members.map((m) => (\n          <option key={m.id} value={m.name}>\n            {m.name}\n          </option>\n        ))}\n      </select>\n\n      <select \n        value={sortBy} \n        onChange={(e) => setSortBy(e.target.value)} \n        style={selectStyle}\n      >\n        <option value=\"timestamp-desc\">Nyast först</option>\n        <option value=\"timestamp-asc\">Äldst först</option>\n        <option value=\"title-asc\">A–Ö</option>\n        <option value=\"title-desc\">Ö–A</option>\n      </select>\n    </div>\n  );\n};\n\nexport default FilterSortBar;\n","import React, { useState, useEffect } from \"react\";\n\nconst MemberForm = ({ onAddMember, user }) => {\n  const [name, setName] = useState(\"\");\n  const [role, setRole] = useState(\"ux\");\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setRole(user.role || \"ux\");\n    }\n  }, [user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === \"\") return;\n\n    onAddMember(name, role);\n\n    if (!user) {\n      setName(\"\");\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      style={{\n        padding: \"1rem\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"5px\",\n        marginBottom: \"1rem\",\n      }}\n    >\n      {!user && (\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Namn\"\n          style={{\n            padding: \"0.5rem\",\n            width: \"100%\",\n            marginBottom: \"0.5rem\",\n            boxSizing: \"border-box\",\n          }}\n        />\n      )}\n    \n    </form>\n  );\n};\n\nexport default MemberForm;\n","import React, { useState, useEffect } from \"react\";\nimport AssignmentForm from \"./components/AssignmentForm\";\nimport AssignmentList from \"./components/AssignmentList\";\nimport FilterSortBar from \"./components/FilterSortBar\";\nimport MemberForm from \"./components/MemberForm\";\n\nimport { auth, db } from \"./firebase/firebase\";\nimport {\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n} from \"firebase/auth\";\n\nimport {\n  addDoc,\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  setDoc,\n  serverTimestamp,\n  onSnapshot,\n} from \"firebase/firestore\";\n\nconst App = () => {\n  const [assignments, setAssignments] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [filters, setFilters] = useState({ category: \"\", member: \"\" });\n  const [sortBy, setSortBy] = useState(\"timestamp-desc\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [role, setRole] = useState(\"ux\");\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(db, \"assignments\"), (snapshot) => {\n      const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n      setAssignments(data);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  \n  useEffect(() => {\n    const fetchMembers = async () => {\n      const snapshot = await getDocs(collection(db, \"users\"));\n      const data = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        name: doc.data().name || doc.data().email,\n        category: doc.data().role, \n        ...doc.data(),\n      }));\n      setMembers(data);\n    };\n    fetchMembers();\n  }, []);\n\n  const filtered = (status) =>\n    assignments\n      .filter((a) => a?.status === status)\n      .filter(\n        (a) =>\n          (!filters.category || a?.category === filters.category) &&\n          (!filters.member || a?.member === filters.member)\n      );\n\n  const handleAddAssignment = async (title, category) => {\n    await addDoc(collection(db, \"assignments\"), {\n      title,\n      category,\n      status: \"new\",\n      member: \"\",\n      timestamp: serverTimestamp(),\n    });\n  };\n\n  const handleAddMember = async (name, role) => {\n    try {\n   \n      await addDoc(collection(db, \"users\"), { \n        name, \n        role: role,\n        email: `${name.toLowerCase().replace(/\\s+/g, '')}@temp.com` \n      });\n      \n      \n      const newMember = {\n        id: Date.now().toString(), \n        name,\n        category: role,\n        role: role\n      };\n      setMembers(prev => [...prev, newMember]);\n    } catch (error) {\n      alert(\"Kunde inte lägga till medlem: \" + error.message);\n    }\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      alert(\"Fyll i email och lösenord\");\n      return;\n    }\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const uid = userCredential.user.uid;\n      const userDoc = await getDoc(doc(db, \"users\", uid));\n      if (userDoc.exists()) {\n        setUser({ uid, ...userDoc.data() });\n        alert(`Välkommen tillbaka, ${userDoc.data().name || email}!`);\n      } else {\n        alert(\"Användardata kunde inte hittas.\");\n      }\n      setEmail(\"\");\n      setPassword(\"\");\n    } catch (error) {\n      alert(\"Fel vid inloggning: \" + error.message);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      alert(\"Fyll i email och lösenord\");\n      return;\n    }\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const uid = userCredential.user.uid;\n      await setDoc(doc(db, \"users\", uid), {\n        uid,\n        email,\n        name: email,\n        role,\n      });\n      setUser({ uid, email, name: email, role });\n      alert(\"Registrering lyckades!\");\n      setEmail(\"\");\n      setPassword(\"\");\n      \n      \n      const newMember = {\n        id: uid,\n        name: email,\n        category: role,\n        role: role\n      };\n      setMembers(prev => [...prev, newMember]);\n    } catch (error) {\n      alert(\"Fel vid registrering: \" + error.message);\n    }\n  };\n\n  const handleLogout = async () => {\n    await signOut(auth);\n    setUser(null);\n    setMembers([]);\n  };\n\n  const markAsDone = (assignmentId) => {\n    const assignment = assignments.find((a) => a.id === assignmentId);\n    if (!assignment) return;\n    if (assignment.assignedTo !== user.email) {\n      alert(\"Du kan bara markera dina egna uppgifter som klara.\");\n      return;\n    }\n\n    const updatedAssignments = assignments.map((a) =>\n      a.id === assignmentId ? { ...a, status: \"finished\" } : a\n    );\n    setAssignments(updatedAssignments);\n  };\n\n  const appStyle = {\n    minHeight: \"100vh\",\n    padding: \"1.5rem\",\n    fontFamily: \"sans-serif\",\n    maxWidth: \"1000px\",\n    margin: \"0 auto\",\n    backgroundColor: \"#f3f4f6\",\n  };\n\n  const cardStyle = {\n    backgroundColor: \"#fff\",\n    padding: \"1rem\",\n    borderRadius: \"12px\",\n    boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\n  };\n\n  const headingStyle = {\n    fontSize: \"2.5rem\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"#2563eb\",\n    marginBottom: \"2rem\",\n  };\n\n  const buttonStyle = {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"0.5rem 1rem\",\n    borderRadius: \"6px\",\n    border: \"none\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <div style={appStyle}>\n      <h1 style={headingStyle}>Scrum Board</h1>\n\n      {!user && (\n        <div style={{ ...cardStyle, maxWidth: \"400px\", margin: \"0 auto\" }}>\n          <h2 style={{ fontSize: \"1.5rem\", marginBottom: \"1rem\" }}>\n            {isRegistering ? \"Registrera\" : \"Logga in\"}\n          </h2>\n          <form onSubmit={isRegistering ? handleRegister : handleLogin}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              style={{ ...inputStyle }}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Lösenord\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              style={{ ...inputStyle }}\n            />\n            {isRegistering && (\n              <select\n                value={role}\n                onChange={(e) => setRole(e.target.value)}\n                style={{ ...inputStyle }}\n              >\n                <option value=\"ux\">UX</option>\n                <option value=\"frontend\">Frontend</option>\n                <option value=\"backend\">Backend</option>\n              </select>\n            )}\n            <button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#2563eb\",\n                color: \"white\",\n                padding: \"0.5rem\",\n                width: \"100%\",\n                borderRadius: \"4px\",\n                border: \"none\",\n                cursor: \"pointer\",\n              }}\n            >\n              {isRegistering ? \"Registrera\" : \"Logga in\"}\n            </button>\n          </form>\n          <button\n            onClick={() => setIsRegistering(!isRegistering)}\n            style={{ marginTop: \"1rem\", color: \"#2563eb\", textDecoration: \"underline\" }}\n          >\n            {isRegistering ? \"Har redan konto? Logga in\" : \"Har inte konto? Registrera\"}\n          </button>\n        </div>\n      )}\n\n      {user && (\n        <>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: \"1.5rem\" }}>\n            <p>\n              Inloggad som <strong>{user.email}</strong> ({user.role})\n            </p>\n            <button onClick={handleLogout} style={buttonStyle}>\n              Logga ut\n            </button>\n          </div>\n\n          <div style={{ display: \"flex\", gap: \"1.5rem\", marginBottom: \"2rem\", flexWrap: \"wrap\" }}>\n            <div style={{ flex: 1, minWidth: \"300px\", ...cardStyle }}>\n              <AssignmentForm onAddAssignment={handleAddAssignment} />\n              <MemberForm onAddMember={handleAddMember} user={user} />\n            </div>\n            <div style={{ flex: 2, minWidth: \"300px\", ...cardStyle }}>\n              <FilterSortBar\n                filters={filters}\n                setFilters={setFilters}\n                sortBy={sortBy}\n                setSortBy={setSortBy}\n                members={members}\n              />\n            </div>\n          </div>\n\n          <div style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}>\n            {[\"new\", \"in progress\", \"finished\"].map((status) => (\n              <div key={status} style={{ flex: 1, minWidth: \"250px\" }}>\n                <h2\n                  style={{\n                    fontSize: \"1.25rem\",\n                    fontWeight: \"bold\",\n                    marginBottom: \"0.5rem\",\n                    color:\n                      status === \"new\"\n                        ? \"#ef4444\"\n                        : status === \"in progress\"\n                        ? \"#f59e0b\"\n                        : \"#16a34a\",\n                  }}\n                >\n                  {status === \"new\" && \"🆕 Ny\"}\n                  {status === \"in progress\" && \"🚧 Pågår\"}\n                  {status === \"finished\" && \"✅ Klar\"}\n                </h2>\n                <AssignmentList\n                  assignments={filtered(status)}\n                  filters={filters}\n                  sortBy={sortBy}\n                  members={members}\n                  user={user}\n                />\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst inputStyle = {\n  padding: \"0.5rem\",\n  width: \"100%\",\n  marginBottom: \"0.75rem\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"4px\",\n};\n\nexport default App;","// src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\"; // Måste matcha namnet exakt\n\n\n\n\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}