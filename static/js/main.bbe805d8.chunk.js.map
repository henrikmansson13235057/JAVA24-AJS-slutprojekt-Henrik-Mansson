{"version":3,"sources":["components/AssignmentForm.jsx","firebase/firebase.js","firebase/assigments.js","components/AssignmentList.jsx","components/FilterSortBar.jsx","components/MemberForm.jsx","App.js","index.js"],"names":["AssignmentForm","_ref","onAddAssignment","title","setTitle","useState","category","setCategory","React","createElement","onSubmit","e","preventDefault","trim","className","type","value","onChange","target","placeholder","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","assignToMember","async","id","memberName","ref","doc","updateDoc","member","status","AssignmentList","assignments","filters","sortBy","members","user","filtered","filter","a","sort","b","_a$timestamp","_b$timestamp","_b$timestamp2","_a$timestamp2","timestamp","seconds","localeCompare","markAsDone","assignment","find","assignmentId","name","markAsDoneFirebase","error","alert","console","length","map","_a$timestamp3","key","toDate","toLocaleString","Fragment","defaultValue","m","role","onClick","deleteDoc","deleteAssignment","FilterSortBar","setFilters","setSortBy","f","_objectSpread","MemberForm","onAddMember","setName","setRole","useEffect","App","setAssignments","setMembers","email","setEmail","password","setPassword","setUser","isRegistering","setIsRegistering","unsubscribe","onSnapshot","collection","snapshot","data","docs","getDocs","fetchMembers","uid","createUserWithEmailAndPassword","setDoc","message","signInWithEmailAndPassword","userDoc","getDoc","exists","concat","required","signOut","addDoc","serverTimestamp","newMember","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bbe805d8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst AssignmentForm = ({ onAddAssignment }) => {\n  const [title, setTitle] = useState(\"\");\n  const [category, setCategory] = useState(\"ux\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title.trim() === \"\") return;\n    onAddAssignment(title, category);\n    setTitle(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-4 border rounded\">\n      <h2 className=\"text-xl font-semibold mb-2\">Lägg till uppgift</h2>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Uppgiftstitel\"\n        className=\"border p-2 w-full mb-2\"\n      />\n      <select\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        className=\"border p-2 w-full mb-2\"\n      >\n        <option value=\"ux\">UX</option>\n        <option value=\"frontend\">Frontend</option>\n        <option value=\"backend\">Backend</option>\n      </select>\n      <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n        Lägg till\n      </button>\n    </form>\n  );\n};\nexport default AssignmentForm;","\n\n\n// firebase/firebase.js (example)\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGNd0ZOBKETzJAttnxrRa1OeDV4Zqb0jo\",\n  authDomain: \"scrumboard-f2e02.firebaseapp.com\",\n  projectId: \"scrumboard-f2e02\",\n  storageBucket: \"scrumboard-f2e02.firebasestorage.app\",\n  messagingSenderId: \"48014949573\",\n  appId: \"1:48014949573:web:d85977114783f4138184ac\",\n  measurementId: \"G-1EYFVNR3N6\",\n};\n  \n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { auth, db };\n\n","import {\n  addDoc,\n  collection,\n  doc,\n  updateDoc,\n  deleteDoc,\n  serverTimestamp,\n  onSnapshot,\n  query,\n  orderBy\n} from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\n// Add new assignment\nexport const addAssignment = async (title, category) => {\n  await addDoc(collection(db, \"assignments\"), {\n    title,\n    category,\n    status: \"new\",\n    member: \"\",\n    timestamp: serverTimestamp(),\n  });\n};\n\n// Assign to member\nexport const assignToMember = async (id, memberName) => {\n  const ref = doc(db, \"assignments\", id);\n  await updateDoc(ref, {\n    member: memberName,\n    status: \"in progress\",\n  });\n};\n\n// Mark as done\nexport const markAsDone = async (id) => {\n  const ref = doc(db, \"assignments\", id);\n  await updateDoc(ref, {\n    status: \"finished\",\n  });\n};\n\n// Delete assignment\nexport const deleteAssignment = async (id) => {\n  const ref = doc(db, \"assignments\", id);\n  await deleteDoc(ref);\n};\n\n// Get real-time assignments\nexport const getAssignments = (callback) => {\n  const q = query(collection(db, \"assignments\"), orderBy(\"timestamp\", \"desc\"));\n  return onSnapshot(q, (snapshot) => {\n    const data = snapshot.docs.map((doc) => ({ \n      id: doc.id, \n      ...doc.data(),\n      timestamp: doc.data().timestamp // Keep the Firestore timestamp\n    }));\n    callback(data);\n  });\n};","import React from \"react\";\nimport {\n  assignToMember,\n  markAsDone as markAsDoneFirebase,\n  deleteAssignment,\n} from \"../firebase/assigments\";\n\nconst AssignmentList = ({ assignments, filters, sortBy, members, user }) => {\n  const filtered = assignments\n    .filter((a) => {\n      if (filters.category && a.category !== filters.category) return false;\n      if (filters.member && a.member !== filters.member) return false;\n      return true;\n    })\n    .sort((a, b) => {\n      if (sortBy === \"timestamp-asc\")\n        return (a.timestamp?.seconds || 0) - (b.timestamp?.seconds || 0);\n      if (sortBy === \"timestamp-desc\")\n        return (b.timestamp?.seconds || 0) - (a.timestamp?.seconds || 0);\n      if (sortBy === \"title-asc\") return a.title.localeCompare(b.title);\n      if (sortBy === \"title-desc\") return b.title.localeCompare(a.title);\n      return 0;\n    });\n\n  const markAsDone = async (assignmentId) => {\n    const assignment = assignments.find((a) => a.id === assignmentId);\n    if (!assignment) return;\n\n    if (assignment.member !== user.name) {\n      alert(\"Du kan bara markera dina egna uppgifter som klara.\");\n      return;\n    }\n\n    try {\n      await markAsDoneFirebase(assignmentId);\n    } catch (error) {\n      alert(\"Något gick fel vid markering som klar.\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"mt-4\">\n      {filtered.length === 0 ? (\n        <p className=\"text-gray-500\">Inga uppgifter</p>\n      ) : (\n        <ul className=\"space-y-2\">\n          {filtered.map((a) => (\n            <li\n              key={a.id}\n              className=\"p-3 border rounded flex justify-between items-center\"\n            >\n              <div>\n                <p className=\"font-medium\">{a.title}</p>\n                <p className=\"text-sm text-gray-600\">\n                  {a.timestamp?.toDate().toLocaleString()} – {a.category}\n                </p>\n                {a.member && <p className=\"text-sm\">Tilldelad: {a.member}</p>}\n              </div>\n              <div className=\"space-x-2 flex items-center\">\n                {a.status === \"new\" && (\n                  <>\n                    <select\n                      onChange={(e) => assignToMember(a.id, e.target.value)}\n                      className=\"border p-1\"\n                      defaultValue=\"\"\n                    >\n                      <option value=\"\">Tilldela...</option>\n                      {members\n                        .filter((m) => m.category === a.category)\n                        .map((m) => (\n                          <option key={m.id} value={m.name}>\n                            {m.name}\n                          </option>\n                        ))}\n                    </select>\n\n                    {user &&\n                      (!a.member || a.member === \"\") &&\n                      // Visa \"Ta emot\"-knappen ENDAST om användarens roll matchar uppgiftens kategori\n                      user.role === a.category && (\n                        <button\n                          onClick={() => assignToMember(a.id, user.name)}\n                          className=\"bg-blue-500 text-white px-2 py-1 rounded ml-2\"\n                        >\n                          Ta emot\n                        </button>\n                      )}\n                  </>\n                )}\n                {a.status === \"in progress\" && (\n                  a.member === user.name && (\n                    <button\n                      onClick={() => markAsDone(a.id)}\n                      className=\"bg-green-500 text-white px-2 py-1 rounded\"\n                    >\n                      Klart\n                    </button>\n                  )\n                )}\n                {a.status === \"finished\" && (\n                  <button\n                    onClick={() => deleteAssignment(a.id)}\n                    className=\"bg-red-500 text-white px-2 py-1 rounded\"\n                  >\n                    Radera\n                  </button>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default AssignmentList;\n","\nimport React from \"react\";\n\nconst FilterSortBar = ({ filters, setFilters, sortBy, setSortBy, members }) => {\n  return (\n    <div className=\"flex flex-wrap items-center gap-4 my-4\">\n      <select\n        value={filters.category}\n        onChange={(e) => setFilters((f) => ({ ...f, category: e.target.value }))}\n        className=\"border p-2\"\n      >\n        <option value=\"\">Alla kategorier</option>\n        <option value=\"ux\">UX</option>\n        <option value=\"frontend\">Frontend</option>\n        <option value=\"backend\">Backend</option>\n      </select>\n\n      <select\n        value={filters.member}\n        onChange={(e) => setFilters((f) => ({ ...f, member: e.target.value }))}\n        className=\"border p-2\"\n      >\n        <option value=\"\">Alla medlemmar</option>\n        {members.map((m) => (\n          <option key={m.id} value={m.name}>\n            {m.name}\n          </option>\n        ))}\n      </select>\n\n      <select \n        value={sortBy} \n        onChange={(e) => setSortBy(e.target.value)} \n        className=\"border p-2\"\n      >\n        <option value=\"timestamp-desc\">Nyast först</option>\n        <option value=\"timestamp-asc\">Äldst först</option>\n        <option value=\"title-asc\">A–Ö</option>\n        <option value=\"title-desc\">Ö–A</option>\n      </select>\n    </div>\n  );\n};\n\nexport default FilterSortBar;","import React, { useState, useEffect } from \"react\";\n\nconst MemberForm = ({ onAddMember, user, members = [] }) => {\n  const [name, setName] = useState(\"\");\n  const [role, setRole] = useState(\"ux\");\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setRole(user.role || \"ux\");\n    }\n  }, [user]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === \"\") return;\n\n    onAddMember(name, role);\n\n    if (!user) {\n      setName(\"\");\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"p-4 border rounded mb-6\">\n        \n\n        {!user && (\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Namn\"\n            className=\"border p-2 w-full mb-2\"\n          />\n        )}\n\n        {user && (\n          <p className=\"mb-2\">\n            <strong>{user.name}</strong> (inloggad som <em>{user.role}</em>)\n          </p>\n        )}\n\n        \n\n      \n      </form>\n\n      <div className=\"bg-white p-4 rounded shadow max-w-md mx-auto\">\n        <h2 className=\"text-xl font-bold mb-3\">Alla medlemmar</h2>\n        {members.length === 0 ? (\n          <p className=\"text-gray-500\"></p>\n        ) : (\n          <ul className=\"space-y-2 max-h-48 overflow-y-auto\">\n            {members.map((m) => (\n              <li key={m.id} className=\"border-b pb-1\">\n                <p>\n                  <strong>{m.name}</strong> ({m.category})\n                </p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MemberForm;\n","import React, { useState, useEffect } from \"react\";\nimport AssignmentForm from \"./components/AssignmentForm\";\nimport AssignmentList from \"./components/AssignmentList\";\nimport FilterSortBar from \"./components/FilterSortBar\";\nimport MemberForm from \"./components/MemberForm\";\nimport './index.css'; // eller din fil\n\n\n\n\n\nimport { auth, db } from \"./firebase/firebase\";\nimport {\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n} from \"firebase/auth\";\n\nimport {\n  addDoc,\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  setDoc,\n  serverTimestamp,\n  onSnapshot,\n} from \"firebase/firestore\";\n\nconst App = () => {\n  const [assignments, setAssignments] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [filters, setFilters] = useState({ category: \"\", member: \"\" });\n  const [sortBy, setSortBy] = useState(\"timestamp-desc\");\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [role, setRole] = useState(\"ux\");\n\n  // Realtime updates for assignments\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(db, \"assignments\"), (snapshot) => {\n      const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n      setAssignments(data);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Fetch all members for assignment dropdown\n  useEffect(() => {\n    const fetchMembers = async () => {\n      const snapshot = await getDocs(collection(db, \"members\"));\n      const data = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setMembers(data);\n    };\n\n    fetchMembers();\n  }, []);\n\n  const filtered = (status) =>\n    assignments\n      .filter((a) => a?.status === status)\n      .filter(\n        (a) =>\n          (!filters.category || a?.category === filters.category) &&\n          (!filters.member || a?.member === filters.member)\n      );\n\n  const handleAddAssignment = async (title, category) => {\n    await addDoc(collection(db, \"assignments\"), {\n      title,\n      category,\n      status: \"new\",\n      member: \"\",\n      timestamp: serverTimestamp(),\n    });\n  };\n\n  const handleAddMember = async (name, role) => {\n    const newMember = { name, category: role };\n    try {\n      await addDoc(collection(db, \"members\"), newMember);\n    } catch (error) {\n      alert(\"Kunde inte lägga till medlem: \" + error.message);\n    }\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      alert(\"Fyll i email och lösenord\");\n      return;\n    }\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const uid = userCredential.user.uid;\n      const userDoc = await getDoc(doc(db, \"users\", uid));\n      if (userDoc.exists()) {\n        setUser({ uid, ...userDoc.data() });\n        alert(`Välkommen tillbaka, ${userDoc.data().name || email}!`);\n      } else {\n        alert(\"Användardata kunde inte hittas.\");\n      }\n      setEmail(\"\");\n      setPassword(\"\");\n    } catch (error) {\n      alert(\"Fel vid inloggning: \" + error.message);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      alert(\"Fyll i email och lösenord\");\n      return;\n    }\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const uid = userCredential.user.uid;\n      await setDoc(doc(db, \"users\", uid), {\n        uid,\n        email,\n        name: email,\n        role,\n      });\n      setUser({ uid, email, name: email, role });\n      alert(\"Registrering lyckades!\");\n      setEmail(\"\");\n      setPassword(\"\");\n    } catch (error) {\n      alert(\"Fel vid registrering: \" + error.message);\n    }\n  };\n\n  const handleLogout = async () => {\n    await signOut(auth);\n    setUser(null);\n    setMembers([]);\n  };\n\n  const markAsDone = (assignmentId) => {\n  const assignment = assignments.find(a => a.id === assignmentId);\n  if (!assignment) return;\n\n  // Kontrollera att uppgiften tillhör den inloggade användaren\n  if (assignment.assignedTo !== user.email) {\n    alert(\"Du kan bara markera dina egna uppgifter som klara.\");\n    return;\n  }\n\n  // Uppdatera status till \"finished\"\n  const updatedAssignments = assignments.map(a =>\n    a.id === assignmentId ? { ...a, status: \"finished\" } : a\n  );\n\n  setAssignments(updatedAssignments);\n};\n\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6 font-sans max-w-5xl mx-auto\">\n      <h1 className=\"text-4xl font-bold text-center mb-8 text-blue-600\">Scrum Board</h1>\n\n      {!user && (\n        <div className=\"max-w-md mx-auto bg-white p-6 rounded shadow\">\n          <h2 className=\"text-2xl mb-4\">{isRegistering ? \"Registrera\" : \"Logga in\"}</h2>\n          <form onSubmit={isRegistering ? handleRegister : handleLogin}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className=\"border p-2 w-full mb-3\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Lösenord\"\n              className=\"border p-2 w-full mb-3\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            {isRegistering && (\n              <select\n                value={role}\n                onChange={(e) => setRole(e.target.value)}\n                className=\"border p-2 w-full mb-3\"\n              >\n                <option value=\"ux\">UX</option>\n                <option value=\"frontend\">Frontend</option>\n                <option value=\"backend\">Backend</option>\n              </select>\n            )}\n            <button\n              type=\"submit\"\n              className=\"bg-blue-600 text-white px-4 py-2 rounded w-full\"\n            >\n              {isRegistering ? \"Registrera\" : \"Logga in\"}\n            </button>\n          </form>\n          <button\n            onClick={() => setIsRegistering(!isRegistering)}\n            className=\"mt-4 text-blue-600 underline\"\n          >\n            {isRegistering ? \"Har redan konto? Logga in\" : \"Har inte konto? Registrera\"}\n          </button>\n        </div>\n      )}\n\n      {user && (\n        <>\n          <div className=\"flex justify-between items-center mb-6\">\n            <p>\n              Inloggad som <strong>{user.email}</strong> ({user.role})\n            </p>\n            <button\n              onClick={handleLogout}\n              className=\"bg-red-500 text-white px-3 py-1 rounded\"\n            >\n              Logga ut\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            <div className=\"bg-white rounded-xl shadow-md p-4\">\n              <AssignmentForm onAddAssignment={handleAddAssignment} />\n              <MemberForm onAddMember={handleAddMember} user={user} />\n            </div>\n\n            <div className=\"text-center mb-6 md:col-span-2 bg-white rounded-xl shadow-md p-4\">\n              <FilterSortBar\n                filters={filters}\n                setFilters={setFilters}\n                sortBy={sortBy}\n                setSortBy={setSortBy}\n                members={members}\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {[\"new\", \"in progress\", \"finished\"].map((status) => (\n              <div key={status}>\n                <h2\n                  className={`text-xl font-bold mb-2 ${\n                    status === \"new\"\n                      ? \"text-red-500\"\n                      : status === \"in progress\"\n                      ? \"text-yellow-500\"\n                      : \"text-green-600\"\n                  }`}\n                >\n                  {status === \"new\" && \"🆕 Ny\"}\n                  {status === \"in progress\" && \"🚧 Pågår\"}\n                  {status === \"finished\" && \"✅ Klar\"}\n                </h2>\n                <AssignmentList\n                  assignments={filtered(status)}\n                  filters={filters}\n                  sortBy={sortBy}\n                  members={members}\n                  user={user}\n                />\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\"; // Måste matcha namnet exakt\n\n\n\n\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}